<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Route Map</title>
	<style >
		#map{
			height: 400px;
			width: 100%;
		}
	</style>
</head>
<body>
	<h1>Route Map</h1>
	<div id ='map'></div>
	<script src='https://maps.googleapis.com/maps/api/js?key=AIzaSyCi_2JJtblU4pvkV3lbe8IfyutcJpJrVrk'></script>
	<script type="text/javascript">

	//an array of locations to be visited 
	var stringfyData = '<%- JSON.stringify(data) %>'
	var finalParsedData = JSON.parse(stringfyData);
	var deliveryPoints = new Array();
	finalParsedData.forEach(function(ele){
		var temp = 
		{
			latLng: new google.maps.LatLng(parseFloat(ele.latitude), parseFloat(ele.longitude)),
			title: ele.customeraddress
		}
		deliveryPoints.push(temp);
	});

	//console.log(deliveryPoints)
	var shortestDistance = function() {

		var directionsDisplay;
		var directionsService = new google.maps.DirectionsService();
		var map;
		var size = 0;
		var currentPosition;

		// An array to store results from Google routing API.
		var routeResults = [];

		// Call this upon page load to set everything in motion!
		function initialize(currentLat, currentLng) {
			currentPosition = new google.maps.LatLng(currentLat, currentLng);
			directionsDisplay = new google.maps.DirectionsRenderer();
			var mapOptions = {
			  zoom: 13,
			  center: currentPosition
			};
			map = new google.maps.Map(document.getElementById('map'), mapOptions);
			directionsDisplay.setMap(map);

			var marker = new google.maps.Marker({
				  position: currentPosition,
				  map: map,
				  title: 'Currrent location'
			});

			var i = deliveryPoints.length;
			 while (i--) {
			  deliveryPoints[i].marker = new google.maps.Marker({
				position: deliveryPoints[i].latLng,
				map: map,
				title: deliveryPoints[i].title,
				icon: 'https://maps.google.com/mapfiles/ms/icons/green.png'
			  });
			}

			findNearestPlace();
		}

		// Loops through all places to calculate route between our current position
		// and that place.
		function findNearestPlace() {
		  var i = deliveryPoints.length;
			size = deliveryPoints.length;
			routeResults = [];
			while (i--) {
			  calcRoute(deliveryPoints[i].latLng, storeResult);
			}
		}

		// A function to calculate the route between our current position and some desired end point.
		function calcRoute(end, callback) {
			var request = {
				origin: currentPosition,
				destination: end,
				travelMode: google.maps.TravelMode.DRIVING
			};
			directionsService.route(request, function(response, status) {
			  if (status == google.maps.DirectionsStatus.OK) {
				callback(response);
			  } else {
				size--;
			  }
			});
		}

		// Stores a routing result from the API in our global array for routes.
		function storeResult(data) {
			routeResults.push(data);
			if (routeResults.length === size) {
			  findShortest();
			}
		}

		// Goes through all routes stored and finds which one is the shortest. It then
		// sets the shortest route on the map for the user to see.
		function findShortest() {
			var i = routeResults.length;
			var shortestIndex = 0;
			var shortestLength = routeResults[0].routes[0].legs[0].distance.value;

			while (i--) {
			  if (routeResults[i].routes[0].legs[0].distance.value < shortestLength) {
				shortestIndex = i;
				shortestLength = routeResults[i].routes[0].legs[0].distance.value;
			  }
			}
			directionsDisplay.setDirections(routeResults[shortestIndex]);
		}

		// Expose the initialize function publicly as "init".
		return {
			init: initialize
		};
	}();

	// Upon page load, lets start the process!
	google.maps.event.addDomListener(window, 'load', shortestDistance.init(28.6692, 77.4538));

	</script>
</body>
</html>
